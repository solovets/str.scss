/// #str-replace($input-string, $substring[, $replace, $g]) => string
/// Returns copy of input string where defined substring replaced by $replace argument
/// @param {string} $input-string
/// @param {string} $substring
/// @param {string} $replace ['']
/// @param {boolean} $g [true]
/// @return {string}
/// @example
///   @debug str-replace('Hello world', 'l');
///   // => "Heo word"
///   @debug str-replace('Hello world', 'l', $g: false);
///   // => "Helo world"
///   @debug str-replace('Hello world', 'Hello', 'Privet');
///   // => "Privet world"

@function str-replace($input-string, $substring, $replace: '', $g: true) {

    $result: $input-string;
    $error: '[str.scss] Wront type of `$input-string` argument in str-replace function';
    $argument-is-correct: check-type($input-string);

    @if $argument-is-correct {
        $index: str-index($result, $substring);

        @if $index {
            @if $g {
                @return str-slice($result, 1, $index - 1) + $replace + str-replace(str-slice($result, $index + str-length($substring)), $substring, $replace);
            } @else {
                @return str-slice($result, 1, $index - 1) + $replace + str-slice($result, $index + str-length($substring));
            }
        }
    }

    @if ($str-scss-strong-type-check and $argument-is-correct) or not $str-scss-strong-type-check {
        @return $result;
    } @else {
        @error $error;
    }
}
